<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Forms.DataVisualization.MSChartExtension</name>
    </assembly>
    <members>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.ChartAreaExtensions.GetBoundariesOfData(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Boolean)">
            <summary>
            Gets the boundaries (top, left, bottom, right) of this chart area's
            data in the same units as the data.
            </summary>
            <param name="ptrChartArea">The chart area.</param>
            <param name="justVisible">If set to <c>true</c>, 
            get only the visible area boundaries; otherwise,
            get the overall boundaries.</param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.ChartAxisExtensions.GetMinMax(System.Windows.Forms.DataVisualization.Charting.Axis,System.Double@,System.Double@,System.Boolean)">
            <summary>Gets the min max.</summary>
            <param name="axis">The axis.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <param name="justVisible">if set to true, 
            then just get the visible extrema; otherwise, 
            get the overall extrema.</param>
        </member>
        <member name="T:System.Windows.Forms.DataVisualization.Charting.ChartExtents">
            <summary>
            Contains the boundaries (top, bottom, left, right) for the chart
            and provides access to those boundaries in units of the data
            for desired axes. Works with (X-Y Charts only)
            </summary>
        </member>
        <member name="P:System.Windows.Forms.DataVisualization.Charting.ChartExtents.PrimaryExtents">
            <summary>Gets or sets the boundaries of the primary axis.</summary>
            <value>The primary extents.</value>
        </member>
        <member name="P:System.Windows.Forms.DataVisualization.Charting.ChartExtents.SecondaryExtents">
            <summary>Gets or sets the boundaries of the secondary axis.</summary>
            <value>The secondary extents.</value>
        </member>
        <member name="T:System.Windows.Forms.DataVisualization.Charting.CursorPositionChanged">
            <summary>
            Chart control delegate function prototype.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:System.Windows.Forms.DataVisualization.Charting.ZoomChanged">
            <summary>
            Form of the callback when the user has zoomed the chart.
            </summary>
            <param name="extents"></param>
        </member>
        <member name="T:System.Windows.Forms.DataVisualization.Charting.MSChartExtensionToolState">
            <summary>
            MSChart Control Extension's States
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DataVisualization.Charting.MSChartExtensionToolState.Unknown">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DataVisualization.Charting.MSChartExtensionToolState.Select">
            <summary>
            Point Select Mode
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DataVisualization.Charting.MSChartExtensionToolState.Zoom">
            <summary>
            Zoom
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DataVisualization.Charting.MSChartExtensionToolState.ZoomX">
            <summary>
            Zoom only along the X axis.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.DataVisualization.Charting.MSChartExtensionToolState.Pan">
            <summary>
            Pan
            </summary>
        </member>
        <member name="T:System.Windows.Forms.DataVisualization.Charting.MSChartExtension">
            <summary>
            Extension class for MSChart
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.ClearPoints(System.Windows.Forms.DataVisualization.Charting.Series)">
            <summary>
            Speed up MSChart data points clear operations.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.EnableZoomAndPanControls(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Enable Zoom and Pan Controls.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.EnableZoomAndPanControls(System.Windows.Forms.DataVisualization.Charting.Chart,System.Windows.Forms.DataVisualization.Charting.CursorPositionChanged,System.Windows.Forms.DataVisualization.Charting.CursorPositionChanged,System.Windows.Forms.DataVisualization.Charting.ZoomChanged)">
            <summary>
            Enable Zoom and Pan Controls.
            </summary>
            <param name="sender">The sender.</param>
            <param name="selectionChanged">Selection changed callabck. Triggered when user select a point with selec tool.</param>
            <param name="cursorMoved">Cursor moved callabck. Triggered when user move the mouse in chart area.</param>
            <param name="zoomChanged">Callback triggered when chart has 
            zoomed in or out (and on first painting of the chart).</param>
            <remarks>Callback are optional (pass in null to ignore).</remarks>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.DisableZoomAndPanControls(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Disable Zoom and Pan Controls
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.GetChartToolState(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Get current control state.
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.GetBoundariesOfVisibleData(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Gets the boundaries (top, left, bottom, right) of this chart's visible 
            data in the same units and direction as the data. 
            </summary>
            <remarks>The ZoomChanged callback provides
            the same data. Alternately, if you have the chart area of interest,
            use <see cref="M:System.Windows.Forms.DataVisualization.Charting.ChartAreaExtensions.GetBoundariesOfData(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Boolean)"/>.</remarks>
            <param name="ptrChart">The chart.</param>
            <returns>Boundaries (<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartExtents"/>) of the chart.</returns>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.GetBoundariesOfData(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Gets the boundaries (top, left, bottom, right) of this chart's
            data in the same units and direction as the data. 
            </summary>
            <remarks>Alternately, if you have the chart area of interest,
            use <see cref="M:System.Windows.Forms.DataVisualization.Charting.ChartAreaExtensions.GetBoundariesOfData(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Boolean)"/>.</remarks>
            <param name="ptrChart">The chart.</param>
            <returns>Boundaries (<see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartExtents"/>) of the chart.</returns>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.DrawHorizontalLine(System.Windows.Forms.DataVisualization.Charting.Chart,System.Double,System.Drawing.Color,System.String,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartDashStyle)">
            <summary>
            Draw a horizontal line on chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="y">YAxis value.</param>
            <param name="lineColor">Line color.</param>
            <param name="name">Annotation name.</param>
            <param name="lineWidth">Line width</param>
            <param name="lineStyle">Line style</param>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.DrawVerticalLine(System.Windows.Forms.DataVisualization.Charting.Chart,System.Double,System.Drawing.Color,System.String,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartDashStyle)">
            <summary>
            Draw a vertical line on chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="x">XAxis value.</param>
            <param name="lineColor">Line color.</param>
            <param name="name">Annotation name.</param>
            <param name="lineWidth">Line width</param>
            <param name="lineStyle">Line style</param>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.DrawRectangle(System.Windows.Forms.DataVisualization.Charting.Chart,System.Double,System.Double,System.Double,System.Double,System.Drawing.Color,System.String,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartDashStyle)">
            <summary>
            Draw a rectangle on chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="x">XAxis value</param>
            <param name="y">YAxis value</param>
            <param name="width">rectangle width using XAis value.</param>
            <param name="height">rectangle height using YAis value.</param>
            <param name="lineColor">Outline color.</param>
            <param name="name">Annotation name.</param>
            <param name="lineWidth">Line width</param>
            <param name="lineStyle">Line style</param>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.DrawLine(System.Windows.Forms.DataVisualization.Charting.Chart,System.Double,System.Double,System.Double,System.Double,System.Drawing.Color,System.String,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartDashStyle)">
            <summary>
            Draw a line on chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="x0">First point on XAxis.</param>
            <param name="x1">Second piont on XAxis.</param>
            <param name="y0">First point on YAxis.</param>
            <param name="y1">Second point on YAxis.</param>
            <param name="lineColor">Outline color.</param>
            <param name="name">Annotation name.</param>
            <param name="lineWidth">Line width</param>
            <param name="lineStyle">Line style</param>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.MSChartExtension.AddText(System.Windows.Forms.DataVisualization.Charting.Chart,System.String,System.Double,System.Double,System.Drawing.Color,System.String,System.Windows.Forms.DataVisualization.Charting.TextStyle)">
            <summary>
            Add text annotation to chart.
            </summary>
            <param name="sender">Source Chart.</param>
            <param name="text">Text to display.</param>
            <param name="x">Text box upper left X Coordinate.</param>
            <param name="y">Text box upper left Y coordinate.</param>
            <param name="textColor">Text color.</param>
            <param name="name">Annotation name.</param>
            <param name="textStyle">Style of text.</param>
        </member>
        <member name="M:System.Windows.Forms.DataVisualization.Charting.RectangleExtensions.ToStringWithBoundaries(System.Drawing.RectangleF)">
            <summary>Returns a string showing left, right, top, and bottom.</summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:EventHandlerSupport.Extensions">
            <summary>
            This is a set of extensions for accessing the Event Handlers as well as cloning menu items
            </summary>
        </member>
        <member name="F:EventHandlerSupport.Extensions.menuNameCounter">
            <summary>
            This contains a counter to help make names unique
            </summary>
        </member>
        <member name="M:EventHandlerSupport.Extensions.Clone(System.Windows.Forms.ToolStripMenuItem)">
            <summary>
            Clones the specified source tool strip menu item. 
            </summary>
            <param name="sourceToolStripMenuItem">The source tool strip menu item.</param>
            <returns>A cloned version of the toolstrip menu item</returns>
        </member>
        <member name="M:EventHandlerSupport.Extensions.AddHandlers``1(``0,``0)">
            <summary>
            Adds the handlers from the source component to the destination component
            </summary>
            <typeparam name="T">An IComponent type</typeparam>
            <param name="destinationComponent">The destination component.</param>
            <param name="sourceComponent">The source component.</param>
        </member>
        <member name="M:EventHandlerSupport.Extensions.GetEventHandlerList(System.ComponentModel.IComponent)">
            <summary>
            Gets the event handler list from a component
            </summary>
            <param name="component">The source component.</param>
            <returns>The EventHanderList or null if none</returns>
        </member>
    </members>
</doc>
